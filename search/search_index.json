{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to PythonSwiftLink Wiki","text":""},{"location":"setup/","title":"Setup","text":"<p>Add Brew Tap</p> <pre><code>brew tap PythonSwiftLink/tools\n</code></pre>"},{"location":"setup/#psproject","title":"PSProject","text":"<p>Install PSProject</p> <pre><code>brew install psproject\n</code></pre> <p>Upgrade PSProject</p> <pre><code>brew update\nbrew upgrade --formula psproject\n</code></pre>"},{"location":"setup/#swiftonize","title":"Swiftonize","text":"<p>Install Swiftonize</p> <pre><code>brew install swiftonize\n</code></pre> <p>Upgrade Swiftonize</p> <pre><code>brew update\nbrew upgrade --formula swiftonize\n</code></pre>"},{"location":"project/kivy/create/","title":"Kivy","text":"<p>To create a new standard project, type the following command</p> <pre><code>psproject kivy create &lt;ProjectName&gt; -p &lt;path_to_kivy_project&gt;\n</code></pre>"},{"location":"project/kivy/create/#example","title":"example:","text":"<p>If you want to create a Xcode Project named MyProject and your kivy_project folder is relative to current location.</p> <p><pre><code>psproject kivy create MyProject -p kivy_project\n</code></pre> if kivy_project is located else where enter full path</p>"},{"location":"wrapper_docs/types/","title":"Types","text":"<p>TypeCasting</p> <p>PythonSwiftLink / Swiftonize will automatic convert between the following python/swift types:</p> Python cast from/to Swift int Int int32 Int32 int16 Int16 int8 Int8 uint UInt uint32 UInt32 uint16 UInt16 uint8 UInt8 float Double double Double float32 Float float16 Float16 object PyPointer str String bytes Data bytes [UInt8] bytearray Data bytearray [UInt8] memoryview Data memoryview [UInt8] list[int] [Int] list[int32] [Int32] list[int16] [Int16] list[int8] [Int8] list[uint] [UInt] list[uint32] [UInt32] list[uint16] [UInt16] list[uint8] [UInt8] list[float] [Double] list[double] [Double] list[float32] [Float] list[float16] [Float16] list[object] [PyPointer] list[str] [String] list[bytes] [Data] list[bytes] [[UInt8]] list[bytearray] [Data] list[bytearray] [[UInt8]] list[memoryview] [Data] list[memoryview] [[UInt8]]"},{"location":"wrapper_examples/hello_world/","title":"Hello world","text":""},{"location":"wrapper_examples/hello_world/#getting-started","title":"Getting started","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>"},{"location":"wrapper_examples/hello_world/#helloworld-part-1","title":"HelloWorld Part 1","text":"<p>Call Swift from Python:</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p> <p>HelloWorld.swift<pre><code>public class HelloWorld {\n\n    func send_string(text: String) {\n        print(text)\n    }\n\n}\n</code></pre> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p> helloworld.py<pre><code>from swift_tools.swift_types import * # not mandatory\n\n@wrapper\nclass HelloWorld:\n\n    def __init__(self)...\n\n    def send_string(self, text: str): ...\n</code></pre>"},{"location":"wrapper_examples/hello_world/#helloworld-part-2","title":"HelloWorld Part 2","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p> <p>Make callback from Swift to Python: helloworld.py<pre><code>from swift_tools.swift_types import * # not mandatory\n\n@wrapper\nclass HelloWorld:\n\n    def __init__(self, callback: object)...\n\n    def send_string(self, text: str): ...\n\n    class Callbacks:\n        def get_string(self, text: str)\n</code></pre></p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p> HelloWorld.swift<pre><code>public class HelloWorld {\n\n    var callback: PyCallback?\n\n    func send_string(text: String) {\n        callback?.get_string(\n            text + \" World\"\n        )\n    }\n\n}\n</code></pre>"}]}